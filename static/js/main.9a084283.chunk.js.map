{"version":3,"sources":["hooks/useFetch.js","components/Loading.js","components/Brochures.js","components/Footer.js","components/Header.js","components/Error.js","components/Brochure.js","firebase/config.js","hooks/useStorage.js","components/UploadImage.js","App.js","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","loading","setLoading","data","setData","fetchData","a","fetch","resp","json","useEffect","Loading","className","Brochures","feed","entry","map","src","gsx$thumbnail","$t","alt","gsx$property","gsx$name","gsx$lastname","gsx$photo","gsx$beds","gsx$baths","gsx$sqft","gsx$parking","to","gsx$alias","Footer","href","target","rel","Header","Error","Brochure","alias","useParams","single","find","gsx$url","frameBorder","title","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","useStorage","firestore","FieldValue","serverTimestamp","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","UploadImage","setFile","isClicked","setIsClicked","types","type","style","display","id","onChange","e","selected","files","includes","htmlFor","toFixed","onClick","navigator","clipboard","writeText","setTimeout","copyUrl","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a084283.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport const useFetch = (url) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n    setLoading(false);\r\n    setData(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return { data, loading };\r\n};\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <main className='container main-content'>\r\n      <h1>Loading data ...</h1>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport Loading from './Loading';\r\n\r\nconst gsheetID = '1z-rXlasV9g2PerZz8uiVtuCEmY192U0LyJA3oWyo9i8';\r\nconst gsheetNum = '10';\r\n\r\nconst url = `https://spreadsheets.google.com/feeds/list/${gsheetID}/${gsheetNum}/public/values?alt=json`;\r\n\r\nconst Brochures = () => {\r\n  const { loading, data } = useFetch(url);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <main className='container main-content'>\r\n      <h1>The Group at RE/MAX First &mdash; Listings</h1>\r\n      <div className='underline'></div>\r\n\r\n      <section className='thegroup-listings'>\r\n        {data &&\r\n          data.feed.entry.map((data) => {\r\n            return (\r\n              <article className='thegroup-card' key={data.gsx$alias.$t}>\r\n                <div className='thegroup-card__img'>\r\n                  <img\r\n                    src={data.gsx$thumbnail.$t}\r\n                    alt={`listing brochure - ${data.gsx$property.$t}`}\r\n                  />\r\n                  <div className='thegroup-agent'>\r\n                    <p>\r\n                      {data.gsx$name.$t} <span>{data.gsx$lastname.$t}</span>\r\n                    </p>\r\n                  </div>\r\n                  <div className='remaxfirst-logo'>\r\n                    <img\r\n                      src='/assets/images/remax-first-logo-with-balloon.png'\r\n                      alt=''\r\n                    />\r\n                  </div>\r\n                  <div className='thegroup-card__img--small'>\r\n                    <img src={`/assets/images/${data.gsx$photo.$t}`} alt='' />\r\n                  </div>\r\n                </div>\r\n                <div className='thegroup-card__content'>\r\n                  <h3>{data.gsx$property.$t}</h3>\r\n                  <div className='property-info'>\r\n                    <p>\r\n                      <i className='fa fa-bed'></i>\r\n                      <span>{data.gsx$beds.$t} Beds</span>\r\n                    </p>\r\n                    <p>\r\n                      <i className='fa fa-bath'></i>\r\n                      <span>{data.gsx$baths.$t} Baths</span>\r\n                    </p>\r\n                    <p>\r\n                      <i className='fa fa-arrows-alt'></i>\r\n                      <span>{data.gsx$sqft.$t} Sqft</span>\r\n                    </p>\r\n                    <p>\r\n                      <i className='fa fa-car'></i>\r\n                      <span>{data.gsx$parking.$t} Parking</span>\r\n                    </p>\r\n                  </div>\r\n                  <Link to={`/view/${data.gsx$alias.$t}`} className='btn'>\r\n                    View Brochure\r\n                  </Link>\r\n                </div>\r\n              </article>\r\n            );\r\n          })}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Brochures;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className='thegroup-footer'>\r\n      Copyright &copy; 2021 |\r\n      <a\r\n        href='https://www.calgary-real-estate.com/'\r\n        target='_blank'\r\n        rel='noreferrer'>\r\n        TheGroup at RE/MAX First\r\n      </a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='thegroup-hero'>\r\n      <img\r\n        src='/assets/images/team-photo-the-group-at-remax-first.jpg'\r\n        alt=''\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main className='container main-content text-center error-page'>\r\n        <h1>Error 404: Page Not Found</h1>\r\n        <div className='underline'></div>\r\n        <p>Please click the button below to check our other listings.</p>\r\n        <Link to='/' className='btn'>\r\n          Home\r\n        </Link>\r\n      </main>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useFetch } from '../hooks/useFetch';\r\nimport Loading from './Loading';\r\n\r\nconst gsheetID = '1z-rXlasV9g2PerZz8uiVtuCEmY192U0LyJA3oWyo9i8';\r\nconst gsheetNum = '10';\r\nconst url = `https://spreadsheets.google.com/feeds/list/${gsheetID}/${gsheetNum}/public/values?alt=json`;\r\n\r\nconst Brochure = () => {\r\n  const { loading, data } = useFetch(url);\r\n\r\n  const { alias } = useParams();\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (data) {\r\n    var single = data.feed.entry.find((data) => data.gsx$alias.$t === alias);\r\n  }\r\n\r\n  return (\r\n    <main className='brochure-container'>\r\n      {single && (\r\n        <iframe\r\n          src={single.gsx$url.$t}\r\n          frameBorder='0'\r\n          title='71 Hillgrove Drive SE'></iframe>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Brochure;\r\n","import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyBLtWUut-HyngxMaCFM29gwxiNilZrL81o',\r\n  authDomain: 'thegroup-report-site.firebaseapp.com',\r\n  projectId: 'thegroup-report-site',\r\n  storageBucket: 'thegroup-report-site.appspot.com',\r\n  messagingSenderId: '1017009916753',\r\n  appId: '1:1017009916753:web:2c92a01fc092221fc7a170',\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Initializing Firebase services we need\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\n// Special type of timestamp data that Firebase uses in Firestore\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n// Exporting Firebase services for future use\r\nexport { projectFirestore, projectStorage, timestamp };\r\n","import { useState, useEffect } from 'react';\r\n// these were from 'config.js' file, which hosts the firebase configuration\r\nimport { projectStorage } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storageRef = file && projectStorage.ref(file.name);\r\n\r\n    file &&\r\n      storageRef.put(file).on(\r\n        'state_changed',\r\n        (snap) => {\r\n          let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n          setProgress(percentage);\r\n        },\r\n        (err) => {\r\n          setError(err);\r\n        },\r\n        async () => {\r\n          const url = await storageRef.getDownloadURL();\r\n          setUrl(url);\r\n        }\r\n      );\r\n  }, [file]);\r\n\r\n  // here are the values exported when this hook is called\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useState } from 'react';\r\nimport { FaCloudUploadAlt } from 'react-icons/fa';\r\nimport useStorage from '../hooks/useStorage';\r\n\r\nconst UploadImage = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  const { url, progress } = useStorage(file);\r\n\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const handleChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('');\r\n    } else {\r\n      setFile(null);\r\n      setError('Please select an image file (png or jpg)');\r\n    }\r\n  };\r\n\r\n  const copyUrl = (url) => {\r\n    if (url) {\r\n      navigator.clipboard.writeText(url);\r\n      setIsClicked(true);\r\n\r\n      setTimeout(() => {\r\n        setIsClicked(false);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className='container main-content'>\r\n      <h1>Upload Image and Copy URL</h1>\r\n      <div className='underline'></div>\r\n\r\n      <section className='form-container'>\r\n        <form>\r\n          <input\r\n            type='file'\r\n            style={{ display: 'none' }}\r\n            id='upload'\r\n            onChange={handleChange}\r\n          />\r\n          <label htmlFor='upload'>\r\n            <FaCloudUploadAlt /> Upload Image\r\n          </label>\r\n        </form>\r\n\r\n        <div className='output'>\r\n          {error && <h1>{error}</h1>}\r\n          {progress > 0 && (\r\n            <h4>Upload status &mdash; {progress.toFixed(2) + '%'}</h4>\r\n          )}\r\n          {url && (\r\n            <button onClick={() => copyUrl(url)}>\r\n              Click me to copy image URL\r\n            </button>\r\n          )}\r\n\r\n          {isClicked && <h5>URL copied! Ready to paste.</h5>}\r\n        </div>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default UploadImage;\r\n","import React from 'react';\nimport Brochures from './components/Brochures';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Error from './components/Error';\nimport Brochure from './components/Brochure';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport UploadImage from './components/UploadImage';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/'>\n          <Header />\n          <Brochures />\n          <Footer />\n        </Route>\n\n        <Route exact path='/view/:alias'>\n          <Brochure />\n        </Route>\n\n        <Route exact path='/upload'>\n          <Header />\n          <UploadImage />\n        </Route>\n\n        <Route path='*'>\n          <Error />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}